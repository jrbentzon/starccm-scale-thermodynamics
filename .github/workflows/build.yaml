name: Build code

on:
  push:
    branches: [ main ]

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Create Release
        env:
          MAJOR_V: "0"
          MINOR_V: "3"
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -e
          providedMajor=$MAJOR_V
          providedMinor=$MINOR_V
          currentVersion=$(git describe --tags --abbrev=7)
          currentMinor=$(echo $currentVersion | cut -d. -f2)
          currentMajor=$(echo $currentVersion | cut -d. -f1 | cut -dv -f2)
          if [[ $currentMajor -eq $providedMajor ]] && [[ $providedMinor -eq $currentMinor ]];
          then
            currentRevision=$(echo $(echo $currentVersion | rev | cut -d. -f1) | rev | cut -d- -f1)
            nextRevision=$(( currentRevision + 1 ))
          else
            nextRevision='0'
          fi
          nextVersion="v$providedMajor.$providedMinor.$nextRevision"

          gh release create --target main $nextVersion --generate-notes

  release:
    name: Release distribution
    runs-on: ubuntu-latest
    needs: [ create_release ]
    container:
      image: gcc:11-bullseye
      options: -w /home/app/ --mount type=tmpfs,destination=/home/app/
      
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Build .so lib
        run: |
          set -e
          
          version=$(git describe --tags --abbrev=7)
          version >> $TARGET_V
          
          mkdir -p /usr/src/app/out
          cd src && g++ -DDOUBLE_PRECISION -Wno-write-strings -fPIC -shared *.cpp -o /usr/src/app/out/libuser.so 
      - name: Publish library
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /usr/src/app/out/libuser.so
          tag: ${{ env.TARGET_V }}
          overwrite: true
          file_glob: true
